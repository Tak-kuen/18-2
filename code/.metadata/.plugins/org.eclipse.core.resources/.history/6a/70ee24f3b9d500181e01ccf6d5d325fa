package _20181022쓰레드;

//1)Thread 클래스를 상속받아 쓰레드 사용
// 1-1. Thread클래스를 상속받아 클래스를 작성
// 1-2. run메소드 재정의
// 1-3. Thread 객체 생성
// 1-4. start메소드 호출

//2)Runnable 인터페이스를 구현해 쓰레드 사용
// 2-1. Runnable인터페이스를 구현한 클래스를 작성
// 2-2. run메소드 구현
// 2-3. Thread객체 생성시 MyRunnable객체를 인수로 전달
// 2-4. Thread 객체의 start메소드를 실행

//1-1. Thread클래스를 상속받아 클래스를 작성
class MyThread extends Thread{
	
	//1-2. run메소드 재정의
	@Override
	public void run() {
		// TODO Auto-generated method stub
		for(int i=0 ; i<100 ; i++) {
			System.out.print(i + " ");
		}
	}
}

//2-1. Runnable인터페이스를 구현한 클래스를 작성
class MyRunnable implements Runnable{
	// 2-2. run메소드 구현
	@Override
	public void run() {
		// TODO Auto-generated method stub
		for(int i=0 ; i<100 ; i++) {
			System.out.print(i + " ");
		}
	}
}

public class WDB {
	public static void main(String[] args) {
		// 1-3. Thread 객체 생성	
		MyThread t1 = new MyThread();
		MyThread t2 = new MyThread();
		// 1-4. start 메소드 실행
		t1.start();
		t2.start();
		System.out.println("==========================================================");
		
		// 2-3. Thread객체 생성시 MyRunnable객체를 인수로 전달
		Thread t = new Thread(new MyRunnable());
		t.start();
	}
	

}
