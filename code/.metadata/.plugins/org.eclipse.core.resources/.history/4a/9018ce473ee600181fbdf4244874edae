package _20181112네트워크;

import java.io.*;
import java.net.*;

class MyThread extends Thread {
	Socket socket;
	public MyThread(Socket socket) {
		this.socket=socket;
	}
	
	public void run() {
		String data;
		BufferedReader in;
		try {
			in = new BufferedReader(
					new InputStreamReader(
							socket.getInputStream()));
			while( ( data=in.readLine() ) != null) {
				System.out.println(data+""+socket.getInetAddress());
			}
			socket.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
}

public class ServerSocketTest {
	public static void main(String[] args) {
		//서버를 생성
		String data;//안의 내용을 저장할 스트링선언
		try {
		//	1. 서버 소켓을 만든다.
			ServerSocket serverSocket = new ServerSocket(5555);
			System.out.println("서버 소켓 5555포트로 대기중");
			while(true) {
		//	2. 클라이언트의 접속을 기다린다.
		//	클라이언트가 접속하면 그 클라이언트와 통신할 소켓을 생성한다.
				Socket socket = serverSocket.accept();//accept의 리턴값이 소켓임
		//	3. 생성된 소켓으로부터 클라이언트의 메시지를 받는다.
				BufferedReader in = new BufferedReader(
						new InputStreamReader(
								socket.getInputStream()));//URLTest의 15-17라인을 한 메소드로 해결
		//	4. 받은메시지를 출력하고, 소켓의 접속을 끊는다.
				while( ( data=in.readLine() ) != null) {
					System.out.println(data+""+socket.getInetAddress());
				}
				socket.close();
			}
		//	5. 계속 대기한다.
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
